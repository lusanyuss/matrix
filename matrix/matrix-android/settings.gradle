logger.quiet "1.settings.gradle-start"
apply from: "$rootDir/gradle/Arguments.gradle"

// Gradle plugin
include ':matrix-gradle-plugin'

// Components
include ':matrix-android-commons'
include ':matrix-android-lib'
include ':matrix-commons'
include ':matrix-resource-canary:matrix-resource-canary-common'
include ':matrix-resource-canary:matrix-resource-canary-analyzer'
include ':matrix-resource-canary:matrix-resource-canary-analyzer-cli'
include ':matrix-resource-canary:matrix-resource-canary-android'
include ':matrix-trace-canary'
include ':matrix-apk-canary'
include ':matrix-io-canary'
include ':matrix-sqlite-lint:matrix-sqlite-lint-android-sdk'
include ':matrix-battery-canary'
include ':matrix-arscutil'
include ':matrix-opengl-leak'
include ':matrix-memory-dump'
include ':matrix-traffic'

// Components for memory hook
include ':matrix-backtrace'
include ':matrix-hooks'
include ':matrix-jectl'
include ':matrix-fd'

// Benchmark
include ':test:matrix-backtrace-benchmark'

// TEST
include ':test:test-backtrace'
include ':test:test-memoryhook'

if (gradle.staticLinkCXX()) {
    include ':matrix-hooks:cxx-static'
    include ':matrix-opengl-leak:cxx-static'
    include ':matrix-backtrace:cxx-static'
}


gradle.addProjectEvaluationListener(new ProjectEvaluationListener() {
    @Override
    void beforeEvaluate(Project project) {
        logger.quiet project.name+" beforeEvaluate"
    }

    @Override
    void afterEvaluate(Project project, ProjectState state) {
        logger.quiet project.name+" afterEvaluate"
    }
})

gradle.addBuildListener(new BuildListener() {
    @Override
    void buildStarted(Gradle gradle) {
        logger.quiet "buildStarted"
    }

    @Override
    void settingsEvaluated(Settings settings) {
        logger.quiet "3.settingsEvaluated"
    }

    @Override
    void projectsLoaded(Gradle gradle) {
        logger.quiet "4.projectsLoaded"
    }

    @Override
    void projectsEvaluated(Gradle gradle) {
        logger.quiet "5.projectsEvaluated"
    }

    @Override
    void buildFinished(BuildResult result) {
        logger.quiet "6.buildFinished"
    }
})

gradle.taskGraph.whenReady {
    logger.quiet "生成taskGraph依赖图谱,顺序执行各个任务"
}

gradle.taskGraph.addTaskExecutionListener(new TaskExecutionListener() {
    @Override
    void beforeExecute(Task task) {

    }

    @Override
    void afterExecute(Task task, TaskState state) {

    }
})

gradle.taskGraph.beforeTask {
    if(it.name.contains('Classpath')){
        logger.quiet "==========${it.project}-->${it.name}执行前的回调"
    }
}



logger.quiet "2.settings.gradle-end"
